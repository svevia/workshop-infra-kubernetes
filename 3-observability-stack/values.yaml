
workshopBaseUrl: "workshop.contrastdemo.com"

opensearch:
  initialAdminPassword: "Contrast@123!"
  nodeSelector:
    node-type: system

opensearch-dashboard:
  nodeSelector:
    node-type: system

#
## Falco Configuration
#
falco:
  # Node selector to run on system nodes
  nodeSelector:
    node-type: system
  
  # k8s-metacollector configuration
  k8s-metacollector:
    nodeSelector:
      node-type: system
      
  falco:
    json_output: "true"
    loglevel: "debug"
    json_include_output_property: "true"
    json_include_tags_property: "true"

  tty: true

  falcoctl:
    env:
      - name: FALCOCTL_ARTIFACT_NOVERIFY
        value: "true"

  collectors:
    kubernetes:
      enabled: true

  serviceAccount:
    create: true
  rbac:
    create: true

#
## FluentBit Configuration
#
fluent-bit:
  rbac:
    create: true
  serviceAccount:
    create: true
    name: fluent-bit

  kind: DaemonSet

  backend:
    type: null

  luaScripts:
    modsec_ns.lua: |
      function keep_modsec(tag, ts, record)
        if record["transaction"] ~= nil or record["messages"] ~= nil then
          return 1, ts, record
        end
        return 0, ts, record
      end

      function set_ns(tag, ts, record)
        local host = nil

        if record["request"] and record["request"]["headers"] then
          local h = record["request"]["headers"]
          host = h["Host"] or h["host"]
        end

        if not host and record["transaction"] and record["transaction"]["request"] and record["transaction"]["request"]["headers"] then
          local h2 = record["transaction"]["request"]["headers"]
          host = h2["Host"] or h2["host"]
        end

        if host then
          host = string.gsub(host, ":%d+$", "")
          local ns = string.match(host, "^cargocats%.([%w%-%_%.]+)%.workshop.contrastdemo.com$")
          record["ns"] = ns or "unknown"
        else
          record["ns"] = "unknown"
        end

        return 1, ts, record
      end


  config:
    service: |
      [SERVICE]
          Flush        1
          Daemon       Off
          Log_Level    info
          Parsers_File parsers.conf
          Parsers_File custom_parsers.conf
          HTTP_Server  On
          HTTP_Listen  0.0.0.0
          HTTP_Port    2020

    inputs: |
      [INPUT]
          Name              tail
          Path              /var/log/containers/*ingress-nginx-controller*.log
          Read_From_Head    On
          Parser            cri
          Tag               modsec

      [INPUT]
          Name              tail
          Path              /var/log/containers/*simulation-console-contrastdatacollector*.log
          Read_From_Head    On
          Parser            cri
          Tag               adr

      [INPUT]
          Name              tail
          Path              /var/log/containers/*falco*.log
          Read_From_Head    On
          Parser            cri
          Tag               edr
    
    filters: |
      [FILTER]
          Name   grep
          Match  adr
          Regex  message incident_id

      [FILTER]
          Name        parser
          Match       adr
          Key_Name    message
          Parser      json_no_ts
          Reserve_Data Off

      #[FILTER]
      #    name       expect
      #    match      adr
      #    key_exists incident_id
      #    action     exit

      [FILTER]
          Name        parser
          Match       modsec
          Key_Name    message
          Parser      json_no_ts
          Reserve_Data Off

      [FILTER]
          Name        parser
          Match       edr
          Key_Name    message
          Parser      json_no_ts
          Reserve_Data Off

      [FILTER]
          Name   lua
          Match  modsec
          script /fluent-bit/scripts/modsec_ns.lua
          call   keep_modsec

      [FILTER]
          Name   modify
          Match_Regex ^(modsec|adr)$
          Remove stream
          Remove time
          Remove timestamp

      [FILTER]
          Name          nest
          Match         edr
          Operation     lift
          Nested_under  output_fields

      [FILTER]
          Name   modify
          Match  edr
          Copy   k8s.ns.name ns

      [FILTER]
          Name   lua
          Match  modsec
          script /fluent-bit/scripts/modsec_ns.lua
          call   set_ns

      [FILTER]
          Name   modify
          Match  modsec
          Add    service WAF

      [FILTER]
          Name   modify
          Match  adr
          Add    service ADR

      [FILTER]
          Name   modify
          Match  edr
          Add    service EDR

    outputs: |
      [OUTPUT]
          Name                 es
          Match_Regex ^(modsec|adr|edr)$
          Host                 opensearch-node
          Port                 9200
          HTTP_User            admin
          HTTP_Passwd          Contrast@123!
          tls                  On
          tls.verify           Off
          Logstash_Format      On
          Logstash_Prefix      unknown
          Logstash_Prefix_Key  ns
          Replace_Dots         On
          Suppress_Type_Name   On
          Retry_Limit          False

    customParsers: |
      [PARSER]
          Name   json_no_ts
          Format json
          Time_Keep On

    